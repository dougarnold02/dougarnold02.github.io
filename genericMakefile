# This was a *mistake* making the shell -i caused processes to hang!
# SHELL=/bin/zsh -i
# webpageurl ?= "http://privatewww.essex.ac.uk/~doug/"
# webpageurl = http://dougarnold.paperplane.io/
webpageurl = https://dougarnold02.github.io/
#  # This was for syncing with unison, but I've simplified things.
#  # It seems to me simpler just to keep the directories totally synced with unison
#  # so everything is done in the .prf file [[file:~/.unison/myweb.prf]].
#  # But here is something I tried before:
#  ## # The idea here is that we just pass to unison the CWD path relative to the
#  ## # root given in the unison preferences file. If we are not in the root directory we set
#  ## # the -path value by substituting the unison root in the CWD value:
#  ## # UNISONROOT = $(HOME)/Google Drive/Magic Briefcase/myweb
#  ## # Check also the path in ~/.unison/myweb.prf
#  ## # UNISONROOT = $(HOME)/Dropbox/myweb
#  ## UNISONROOT = $(HOME)
#  ## CURRENTDIR = $(realpath $(PWD))
#  ## ifneq "$(CURRENTDIR)" "$(UNISONROOT)"
#  ##    UNISONPATHEXPR = -path $(subst $(UNISONROOT)/,,$(CURRENTDIR))
#  ## endif

default :
	echo $(webpageurl)

unison :
	unison-$(SYSNAME) -auto -rsrc true -ui text myweb 

# This is already included by ~/LaTeX/Maketex/Makefile, but most of the 
# makefiles in this directory don't load that, so we need it here. But we check it is not already loaded:
ifneq "$(webviewMakefileloaded)" "1"
include ~/LaTeX/Maketex/webviewMakefile
endif

# This code is for sync-ing with rsync:
excludes =  
# If we don't exclude these, we will be able to do the 'make' stuff directly on unix4, etc.
# These files don't show in the index because the Makefile that creates the index discards them.
# excludes :=  $(excludes) --exclude Makefile 
# excludes :=  $(excludes) --exclude genericMakefile
excludes :=  $(excludes) --exclude WebPage 
excludes :=  $(excludes) --exclude .DS_Store 
excludes :=  $(excludes) --exclude \*~	

# a 'test' option
rsyncopts = --delete -av $(excludes)
ifeq "$(test)" "1"
   rsyncopts := $(rsyncopts) -n
endif

# interact with github, to discard changes do: git restore ChangedFile
git     :
	git status
	git add .
	git commit -m "Files Changed in the following way..."
	git push origin


# Sync with the corresponding directory on unix4
# CWD = $(realpath .)
# LOCALROOT = $(HOME)/Dropbox/myweb/           # where do the files really live
# REMOTEROOT = myweb/                          # where do the files live on the remote site (e.g. unix4)
# 
# 
# # Notice this preserves permissions -- so make sure they are right on the sending side
# # that's what the chmod does (because this is not my default umask)
# # Notice the source side path always ends in a /; use test=1 for a dry run
# sync     : sync-put
# sync-put : fixpermissions
# 	rsync  $(rsyncopts)  -e ssh $(LOCALROOT) unix4.essex.ac.uk:$(REMOTEROOT)
# 
# sync-get :
# 	@echo "\tAre you sure?\n\t -- You only need this if you have changed things directly on unix4!! If so, do:"
# 	@echo "\trsync"  $(rsyncopts)  -e ssh unix4.essex.ac.uk:$(REMOTEROOT) $(LOCALROOT)

fixpermissions :
	chmod -R -vv  u=rwX,go=rX .
perms : fixpermissions
permissions : fixpermissions

# targets := $(targets) "sync-put,  sync-get (with test=1, do a dry run)"
targets := $(targets) permissions,\ fixpermissions,\ perms,
# targets := $(targets) unison
targets := $(targets) git

# 	tmp-x :
#	 echo "$(subst $(HOME)/Box Sync/Default\ Sync\ Folder/,,$(CWD))"
#	echo $(subst $(HOME)/Documents/Magic Briefcase/,,$(CWD))/
# $(subst Magic Briefcase,foo,$(CWD))
# $(PWD)
